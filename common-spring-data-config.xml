<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:aop="http://www.springframework.org/schema/aop"  
    xmlns:context="http://www.springframework.org/schema/context" 
    xmlns:tx="http://www.springframework.org/schema/tx"  
    xsi:schemaLocation="  
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd  
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd  
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd 
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd"
    default-lazy-init="false">  
  
    <!-- 开启注解 -->
    <context:annotation-config />  
    
     <!-- 扫描包注解 -->
    <context:component-scan base-package="com.common.data" />
    
  <!-- druid数据源 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">  
		<property name="driverClassName" value="${database.driveClass}" />
        <property name="url" value="${database.url}" />  
        <property name="username" value="${database.username}" />  
        <property name="password" value="${database.password}" />  
        <property name="initialSize" value="${database.initialSize}" />  
        <property name="maxActive" value="${database.maxActive}" />  
        <property name="maxWait" value="60000" />  
        <property name="minIdle" value="1" />  
        <property name="timeBetweenEvictionRunsMillis" value="3000" />  
        <property name="minEvictableIdleTimeMillis" value="300000" />  
        <property name="validationQuery" value="SELECT 1 FROM DUAL" />  
        <property name="testWhileIdle" value="true" />  
        <property name="testOnBorrow" value="false" />  
        <property name="testOnReturn" value="false" />  
        <!-- mysql 不支持 poolPreparedStatements-->  
        <!--<property name="poolPreparedStatements" value="true" />-->  
        <!--<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />-->  
        <!-- 开启Druid的监控统计功能 -->  
        <!-- <property name="filters" value="stat" />   -->
    </bean> 
	
   <!-- spring sqlSessionFactor 分页插件 -->
	<bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath*:mapper/**/*Mapper.xml" />
		<property name="typeAliasesPackage" value="com.common.model" />
		<property name="configurationProperties">
			<props>
				<prop key="cacheEnabled">${mybatis.cache.enabled}</prop>
				<prop key="mapUnderscoreToCamelCase">true</prop>
			</props>
		</property>
		<property name="plugins">
			<list>
				<bean class="com.github.pagehelper.PageHelper">
					<property name="properties">
						<value>
							dialect=mysql
							offsetAsPageNum=true
							rowBoundsWithCount=true
							pageSizeZero=true
							reasonable=true
							params=pageNum:pageNum;pageSize:pageSize;pageSizeZero:pageSizeZero;reasonable:reasonable;count:count
						</value>
					</property>
				</bean>
			</list>
		</property>
	</bean>
	
  <!-- spring jdbc模板 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate" >
        <property name="dataSource" ref="dataSource" />
    </bean>
	
  <!-- mapper.xml 扫描-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.common.data.mapper" />
		<property name="sqlSessionFactory" ref="sessionFactory" />
	</bean>
		
    <!-- spring 事物管理 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
		<!--<property name="globalRollbackOnParticipationFailure" value="false" /> 指定此参数为false-->
	</bean>

    <!-- spring aspectj 注解开启 自动代理方法拦截 -->
    <aop:aspectj-autoproxy />
    
    <!-- 开启spring 注解事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
</beans>
